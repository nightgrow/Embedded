
8th_LED_Special.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000154  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000100  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000154  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000184  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  000001c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000808  00000000  00000000  000001e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000076e  00000000  00000000  000009ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002da  00000000  00000000  0000115a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  00001434  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003d1  00000000  00000000  00001458  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000010  00000000  00000000  00001829  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	4b c0       	rjmp	.+150    	; 0x9c <__bad_interrupt>
   6:	00 00       	nop
   8:	49 c0       	rjmp	.+146    	; 0x9c <__bad_interrupt>
   a:	00 00       	nop
   c:	47 c0       	rjmp	.+142    	; 0x9c <__bad_interrupt>
   e:	00 00       	nop
  10:	45 c0       	rjmp	.+138    	; 0x9c <__bad_interrupt>
  12:	00 00       	nop
  14:	43 c0       	rjmp	.+134    	; 0x9c <__bad_interrupt>
  16:	00 00       	nop
  18:	41 c0       	rjmp	.+130    	; 0x9c <__bad_interrupt>
  1a:	00 00       	nop
  1c:	3f c0       	rjmp	.+126    	; 0x9c <__bad_interrupt>
  1e:	00 00       	nop
  20:	3d c0       	rjmp	.+122    	; 0x9c <__bad_interrupt>
  22:	00 00       	nop
  24:	3b c0       	rjmp	.+118    	; 0x9c <__bad_interrupt>
  26:	00 00       	nop
  28:	39 c0       	rjmp	.+114    	; 0x9c <__bad_interrupt>
  2a:	00 00       	nop
  2c:	37 c0       	rjmp	.+110    	; 0x9c <__bad_interrupt>
  2e:	00 00       	nop
  30:	35 c0       	rjmp	.+106    	; 0x9c <__bad_interrupt>
  32:	00 00       	nop
  34:	33 c0       	rjmp	.+102    	; 0x9c <__bad_interrupt>
  36:	00 00       	nop
  38:	31 c0       	rjmp	.+98     	; 0x9c <__bad_interrupt>
  3a:	00 00       	nop
  3c:	2f c0       	rjmp	.+94     	; 0x9c <__bad_interrupt>
  3e:	00 00       	nop
  40:	2d c0       	rjmp	.+90     	; 0x9c <__bad_interrupt>
  42:	00 00       	nop
  44:	2b c0       	rjmp	.+86     	; 0x9c <__bad_interrupt>
  46:	00 00       	nop
  48:	29 c0       	rjmp	.+82     	; 0x9c <__bad_interrupt>
  4a:	00 00       	nop
  4c:	27 c0       	rjmp	.+78     	; 0x9c <__bad_interrupt>
  4e:	00 00       	nop
  50:	25 c0       	rjmp	.+74     	; 0x9c <__bad_interrupt>
  52:	00 00       	nop
  54:	23 c0       	rjmp	.+70     	; 0x9c <__bad_interrupt>
  56:	00 00       	nop
  58:	21 c0       	rjmp	.+66     	; 0x9c <__bad_interrupt>
  5a:	00 00       	nop
  5c:	1f c0       	rjmp	.+62     	; 0x9c <__bad_interrupt>
  5e:	00 00       	nop
  60:	1d c0       	rjmp	.+58     	; 0x9c <__bad_interrupt>
  62:	00 00       	nop
  64:	1b c0       	rjmp	.+54     	; 0x9c <__bad_interrupt>
  66:	00 00       	nop
  68:	19 c0       	rjmp	.+50     	; 0x9c <__bad_interrupt>
  6a:	00 00       	nop
  6c:	17 c0       	rjmp	.+46     	; 0x9c <__bad_interrupt>
  6e:	00 00       	nop
  70:	15 c0       	rjmp	.+42     	; 0x9c <__bad_interrupt>
  72:	00 00       	nop
  74:	13 c0       	rjmp	.+38     	; 0x9c <__bad_interrupt>
  76:	00 00       	nop
  78:	11 c0       	rjmp	.+34     	; 0x9c <__bad_interrupt>
  7a:	00 00       	nop
  7c:	0f c0       	rjmp	.+30     	; 0x9c <__bad_interrupt>
  7e:	00 00       	nop
  80:	0d c0       	rjmp	.+26     	; 0x9c <__bad_interrupt>
  82:	00 00       	nop
  84:	0b c0       	rjmp	.+22     	; 0x9c <__bad_interrupt>
  86:	00 00       	nop
  88:	09 c0       	rjmp	.+18     	; 0x9c <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	02 d0       	rcall	.+4      	; 0x9e <main>
  9a:	30 c0       	rjmp	.+96     	; 0xfc <_exit>

0000009c <__bad_interrupt>:
  9c:	b1 cf       	rjmp	.-158    	; 0x0 <__vectors>

0000009e <main>:
#include <avr/io.h>


int main(void)
{
	DDRB = 0xFF;
  9e:	8f ef       	ldi	r24, 0xFF	; 255
  a0:	87 bb       	out	0x17, r24	; 23
	PORTB = 0xFF;
  a2:	88 bb       	out	0x18, r24	; 24
	DDRE = 0x00;
  a4:	12 b8       	out	0x02, r1	; 2
		else if((PINE&0x08)==0x00) PORTB = 0xF3;
		else if((PINE&0x10)==0x00) PORTB = 0xCF;
		else if((PINE&0x20)==0x00) PORTB = 0x3F;
		else if((PINE&0x40)==0x00) PORTB = 0xAA;
		else if((PINE&0x80)==0x00) PORTB = 0x55;
		else PORTB = 0xFF;
  a6:	ef ef       	ldi	r30, 0xFF	; 255
		else if((PINE&0x04)==0x00) PORTB = 0xFC;
		else if((PINE&0x08)==0x00) PORTB = 0xF3;
		else if((PINE&0x10)==0x00) PORTB = 0xCF;
		else if((PINE&0x20)==0x00) PORTB = 0x3F;
		else if((PINE&0x40)==0x00) PORTB = 0xAA;
		else if((PINE&0x80)==0x00) PORTB = 0x55;
  a8:	75 e5       	ldi	r23, 0x55	; 85
		else if((PINE&0x02)==0x00) PORTB = 0x0F;
		else if((PINE&0x04)==0x00) PORTB = 0xFC;
		else if((PINE&0x08)==0x00) PORTB = 0xF3;
		else if((PINE&0x10)==0x00) PORTB = 0xCF;
		else if((PINE&0x20)==0x00) PORTB = 0x3F;
		else if((PINE&0x40)==0x00) PORTB = 0xAA;
  aa:	6a ea       	ldi	r22, 0xAA	; 170
		if((PINE&0x01)==0x00) PORTB = 0xF0;
		else if((PINE&0x02)==0x00) PORTB = 0x0F;
		else if((PINE&0x04)==0x00) PORTB = 0xFC;
		else if((PINE&0x08)==0x00) PORTB = 0xF3;
		else if((PINE&0x10)==0x00) PORTB = 0xCF;
		else if((PINE&0x20)==0x00) PORTB = 0x3F;
  ac:	5f e3       	ldi	r21, 0x3F	; 63
	{
		if((PINE&0x01)==0x00) PORTB = 0xF0;
		else if((PINE&0x02)==0x00) PORTB = 0x0F;
		else if((PINE&0x04)==0x00) PORTB = 0xFC;
		else if((PINE&0x08)==0x00) PORTB = 0xF3;
		else if((PINE&0x10)==0x00) PORTB = 0xCF;
  ae:	4f ec       	ldi	r20, 0xCF	; 207
	while (1)
	{
		if((PINE&0x01)==0x00) PORTB = 0xF0;
		else if((PINE&0x02)==0x00) PORTB = 0x0F;
		else if((PINE&0x04)==0x00) PORTB = 0xFC;
		else if((PINE&0x08)==0x00) PORTB = 0xF3;
  b0:	33 ef       	ldi	r19, 0xF3	; 243
	
	while (1)
	{
		if((PINE&0x01)==0x00) PORTB = 0xF0;
		else if((PINE&0x02)==0x00) PORTB = 0x0F;
		else if((PINE&0x04)==0x00) PORTB = 0xFC;
  b2:	2c ef       	ldi	r18, 0xFC	; 252
	DDRE = 0x00;
	
	while (1)
	{
		if((PINE&0x01)==0x00) PORTB = 0xF0;
		else if((PINE&0x02)==0x00) PORTB = 0x0F;
  b4:	9f e0       	ldi	r25, 0x0F	; 15
	PORTB = 0xFF;
	DDRE = 0x00;
	
	while (1)
	{
		if((PINE&0x01)==0x00) PORTB = 0xF0;
  b6:	80 ef       	ldi	r24, 0xF0	; 240
  b8:	08 99       	sbic	0x01, 0	; 1
  ba:	02 c0       	rjmp	.+4      	; 0xc0 <main+0x22>
  bc:	88 bb       	out	0x18, r24	; 24
  be:	fc cf       	rjmp	.-8      	; 0xb8 <main+0x1a>
		else if((PINE&0x02)==0x00) PORTB = 0x0F;
  c0:	09 99       	sbic	0x01, 1	; 1
  c2:	02 c0       	rjmp	.+4      	; 0xc8 <main+0x2a>
  c4:	98 bb       	out	0x18, r25	; 24
  c6:	f8 cf       	rjmp	.-16     	; 0xb8 <main+0x1a>
		else if((PINE&0x04)==0x00) PORTB = 0xFC;
  c8:	0a 99       	sbic	0x01, 2	; 1
  ca:	02 c0       	rjmp	.+4      	; 0xd0 <main+0x32>
  cc:	28 bb       	out	0x18, r18	; 24
  ce:	f4 cf       	rjmp	.-24     	; 0xb8 <main+0x1a>
		else if((PINE&0x08)==0x00) PORTB = 0xF3;
  d0:	0b 99       	sbic	0x01, 3	; 1
  d2:	02 c0       	rjmp	.+4      	; 0xd8 <main+0x3a>
  d4:	38 bb       	out	0x18, r19	; 24
  d6:	f0 cf       	rjmp	.-32     	; 0xb8 <main+0x1a>
		else if((PINE&0x10)==0x00) PORTB = 0xCF;
  d8:	0c 99       	sbic	0x01, 4	; 1
  da:	02 c0       	rjmp	.+4      	; 0xe0 <main+0x42>
  dc:	48 bb       	out	0x18, r20	; 24
  de:	ec cf       	rjmp	.-40     	; 0xb8 <main+0x1a>
		else if((PINE&0x20)==0x00) PORTB = 0x3F;
  e0:	0d 99       	sbic	0x01, 5	; 1
  e2:	02 c0       	rjmp	.+4      	; 0xe8 <main+0x4a>
  e4:	58 bb       	out	0x18, r21	; 24
  e6:	e8 cf       	rjmp	.-48     	; 0xb8 <main+0x1a>
		else if((PINE&0x40)==0x00) PORTB = 0xAA;
  e8:	0e 99       	sbic	0x01, 6	; 1
  ea:	02 c0       	rjmp	.+4      	; 0xf0 <main+0x52>
  ec:	68 bb       	out	0x18, r22	; 24
  ee:	e4 cf       	rjmp	.-56     	; 0xb8 <main+0x1a>
		else if((PINE&0x80)==0x00) PORTB = 0x55;
  f0:	0f 99       	sbic	0x01, 7	; 1
  f2:	02 c0       	rjmp	.+4      	; 0xf8 <main+0x5a>
  f4:	78 bb       	out	0x18, r23	; 24
  f6:	e0 cf       	rjmp	.-64     	; 0xb8 <main+0x1a>
		else PORTB = 0xFF;
  f8:	e8 bb       	out	0x18, r30	; 24
  fa:	de cf       	rjmp	.-68     	; 0xb8 <main+0x1a>

000000fc <_exit>:
  fc:	f8 94       	cli

000000fe <__stop_program>:
  fe:	ff cf       	rjmp	.-2      	; 0xfe <__stop_program>
